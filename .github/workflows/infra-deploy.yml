name: New deployment

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  extract-tag:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.tag.outputs.TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lift to env
        id: raw-tag
        run: |
          echo "RAW_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Parse tag
        id: tag
        run: |
          PARSED=$(echo $RAW_TAG | sed 's/^v\(.*\)/\1/')
          echo "TAG=$PARSED" >> $GITHUB_OUTPUT

  run-tests:
    runs-on: ubuntu-latest
    needs:
      - extract-tag
    outputs:
      TEST_RESULT: ${{ steps.test.outputs.TEST_RESULT }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.13.0
        with:
          java-version: 8
          maven-version: 3.9.1
          checkout-token: ${{ github.token }}
      - name: Set up SSL keys
        run: |
          sudo apt update
          openssl s_client -showcerts -connect maven.java.net:443 < /dev/null 2> /dev/null | openssl x509 -outform PEM > maven_cert.pem
          sudo keytool -import -trustcacerts -file maven_cert.pem -alias maven-snapshot -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt
      - name: Run Maven Tests
        id: test
        run: |
          cd LendARead2/
          mvn clean test || OUTPUT=$? 
          echo "TEST_RESULT=${OUTPUT:-0}" >> $GITHUB_OUTPUT
      
  terraform-init:
    runs-on: ubuntu-latest
    needs: 
      - run-tests
      - extract-tag
  

    env:
      TF_VAR_branch_env: "main" 
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_aws_region: ${{ secrets.AWS_REGION}} 
      TF_VAR_role: "LabRole"
      TF_VAR_ecs_task_cpu_architecture: "ARM_64"
      AWS_REGION: ${{ secrets.AWS_REGION}}
      AWS_BUCKET_NAME_TERRAFORM_STATE: "acsffad-naturally-terribly-briefly-grateful-pup"
      AWS_DYNAMODB_NAME: ${{ secrets.DYNAMODB_TERRAFORM_LOCK_NAME }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0


    - name: Update Terraform Backend with secrets
      run: |
        cd terraform/main
        sed "s|\${bucket}|$AWS_BUCKET_NAME_TERRAFORM_STATE|g" backend.tpl > backend.tf
        sed -i "s|\${region}|$AWS_REGION|g" backend.tf
        sed -i "s|\${dynamodb_table}|$AWS_DYNAMODB_NAME|g" backend.tf

    - name: Run terraform apply 
      run: |
        cd terraform/main
        terraform init
        terraform apply -auto-approve -var-file=sample.tfvars 

